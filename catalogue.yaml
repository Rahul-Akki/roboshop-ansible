- name: catalogue
  hosts: catalogue
  become: yes
  tasks: 
  - name: disable old nodejs and enable nodejs:18
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y 
    # to use the the shell commands in ansible playbook

  - name: Install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: downlode cataloge application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: extract catalogue 
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes # to access the file from the target remote meachine

  - name: Install dependencies 
    ansible.builtin.command: npm install
    args: 
      chdir: /app # to change the directory and run the command

  - name: copy catalogue service 
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: demon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true

#lets start after data is loaded

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: get the catagories count
    ansible.builtin.command: mongo --host mongodb.mydevops.online --quiet --eval 'db.getSiblingDB("catalogue"); db.product.count()'
    register: product_count

  - name: print the count
    ansible.builtin.debug:
      msg: "product count: {{product_count}}"

  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.mydevops.online < /app/schema/catalogue.js


  
